"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class InPersonMeetingTypeEnum(str, Enum):
    r"""Indicates that the event will be an in-person meeting."""
    PHYSICAL = 'physical'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InPersonMeeting:
    r"""Information about the physical (in-person) event location"""
    
    location: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location') }})
    r"""The physical location specified by the event host (publisher)"""  
    type: InPersonMeetingTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Indicates that the event will be an in-person meeting."""  
    